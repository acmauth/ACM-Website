name: Setup Project Board and Issues

on:
  workflow_dispatch:

jobs:
  setup-project-board:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Authenticate GitHub CLI
        run: |
          gh auth login --with-token <<< ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Project Board
        run: |
          project_name="ACM AUTH Website Redesign"
          project_description="Project board for the ACM AUTH website redesign."
          project=$(gh api repos/${{ github.repository }}/projects --field name="$project_name" --field body="$project_description")
          project_id=$(echo $project | jq -r '.id')
          echo "Created project with ID: $project_id"
          echo "project_id=$project_id" >> $GITHUB_ENV

      - name: Create Columns in Project Board
        run: |
          project_id=$GITHUB_ENV.project_id
          gh api --method POST "/projects/$project_id/columns" --field name="Project Planning"
          gh api --method POST "/projects/$project_id/columns" --field name="Design & Architecture"
          gh api --method POST "/projects/$project_id/columns" --field name="Development"
          gh api --method POST "/projects/$project_id/columns" --field name="Infrastructure & Deployment"
          gh api --method POST "/projects/$project_id/columns" --field name="Testing & Documentation"
          gh api --method POST "/projects/$project_id/columns" --field name="Advanced Features"
          gh api --method POST "/projects/$project_id/columns" --field name="Feedback & Maintenance"

  create-issues:
    runs-on: ubuntu-latest
    needs: setup-project-board
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create Issues
        run: |
          # Define a list of issues and corresponding columns
          issues=(
            "Project Planning: Conduct Brainstorming Session: Website Vision & Feature List"
            "Project Planning: Review Current WordPress Website Structure & Content"
            "Project Planning: Collect Feature Requests & Content Needs from ACM AUTH Members"
            "Project Planning: Define User Roles & Permissions"
            "Project Planning: Decide Content Management Approach (Custom CMS or Headless CMS)"
            "Project Planning: Define Social Media Integration Requirements"
            "Project Planning: Choose Technology Stack (Backend, Frontend, Database, Hosting)"
            "Design & Architecture: Design System Architecture (Pages, APIs, Database)"
            "Design & Architecture: Create Wireframes for Main Pages"
            "Design & Architecture: Review & Validate UI/UX Mockups with ACM AUTH Members"
            "Design & Architecture: Define Color Scheme, Fonts, and Branding"
            "Development: Set Up Backend Framework & Initial Project Structure"
            "Development: Set Up Frontend Framework & Initial Project Structure"
            "Development: Implement Public Website Pages (Home, About, Events, Blog, Contact)"
            "Development: Develop Admin Dashboard for Content Management"
            "Development: Implement Authentication & Role-Based Access"
            "Development: Build REST/GraphQL APIs"
            "Development: Integrate Social Media API Content Fetching"
            "Development: Implement Auto-Post Creation from Social Media Data"
            "Development: Migrate Content from WordPress Website"
            "Development: Set Up Database Schema & Migrations"
            "Infrastructure & Deployment: Configure Web Server & Hosting Environment"
            "Infrastructure & Deployment: Set Up CI/CD Pipeline for Deployment"
            "Infrastructure & Deployment: Purchase/Configure Domain & SSL Certificates"
            "Infrastructure & Deployment: Set Up Monitoring & Error Tracking"
            "Infrastructure & Deployment: Define Backup Policy for Content & Database"
            "Testing & Documentation: Define Testing Strategy (Unit, Integration, E2E)"
            "Testing & Documentation: Write Test Cases for Core Features"
            "Testing & Documentation: Test Social Media Synchronization Workflow"
            "Testing & Documentation: Conduct User Acceptance Testing"
            "Testing & Documentation: Write Project README & Setup Instructions"
            "Testing & Documentation: Document Content Editing & Management Guidelines"
            "Testing & Documentation: Create Contributor Guidelines & Code of Conduct"
            "Advanced Features: Members Area with Profiles & Achievements"
            "Advanced Features: Event Registration System"
            "Advanced Features: Newsletter Subscription System"
            "Advanced Features: Gamification Features (Badges, Points)"
            "Advanced Features: Job Board / Project Board"
            "Feedback & Maintenance: Prepare Maintenance & Update Plan"
            "Feedback & Maintenance: Collect Community Feedback for Future Improvements"
          )

          # Loop through the list of issues and create them
          for issue in "${issues[@]}"; do
            # Create the issue
            gh issue create --title "$issue" --body "Automatically created task for $issue"
          done
